package org.opensourceway.uvp.dao;

import org.opensourceway.uvp.entity.Vulnerability;
import org.opensourceway.uvp.enums.VulnSource;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;

import java.util.List;
import java.util.UUID;

public interface VulnerabilityRepository extends JpaRepository<Vulnerability, UUID> {
    @Query(value = "SELECT * FROM vulnerability WHERE source = :#{#source?.name()} AND vuln_id IN :vulnIds",
            nativeQuery = true)
    List<Vulnerability> findBySourceAndVulnIds(VulnSource source, List<String> vulnIds);

    @Query(value = """
            WITH vn AS (SELECT vuln_id FROM vulnerability WHERE vuln_id in :vulnIds)
            SELECT v.*
            FROM vulnerability v
                LEFT JOIN LATERAL UNNEST(v.aliases) alias ON TRUE
            WHERE (alias in (SELECT * FROM vn) OR vuln_id in (SELECT * FROM vn))
                AND source IN :sources
            """,
            nativeQuery = true)
    List<Vulnerability> findBySourcesAndVulnIds(List<String> sources, List<String> vulnIds);

    @Query(value = "SELECT DISTINCT(vuln_id) FROM vulnerability ORDER BY vuln_id", nativeQuery = true)
    List<String> findDistinctVulnIds();
}